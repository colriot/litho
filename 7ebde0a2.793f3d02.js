(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{115:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return r})),n.d(t,"default",(function(){return p}));var o=n(2),a=n(6),i=(n(0),n(161)),s=(n(169),{id:"subcomponent-testing",title:"Sub-Component Testing"}),c={unversionedId:"testing/subcomponent-testing",id:"testing/subcomponent-testing",isDocsHomePage:!1,title:"Sub-Component Testing",description:"Checkout the getting started section to setup the test environment correctly.",source:"@site/docs/testing/subcomponent-testing.mdx",slug:"/testing/subcomponent-testing",permalink:"/docs/testing/subcomponent-testing",editUrl:"https://github.com/facebook/litho/edit/master/website/docs/testing/subcomponent-testing.mdx",version:"current",sidebar:"mainSidebar",previous:{title:"Getting Started",permalink:"/docs/testing/unit-testing"},next:{title:"Matching @Prop",permalink:"/docs/testing/prop-matching"}},r=[{value:"Basic Sub-Component Matching",id:"basic-sub-component-matching",children:[{value:"Setup",id:"setup",children:[]},{value:"Testing assertion on the component hierarchy",id:"testing-assertion-on-the-component-hierarchy",children:[]}]},{value:"Matching against complex hierarchies",id:"matching-against-complex-hierarchies",children:[]},{value:"Custom Conditions",id:"custom-conditions",children:[{value:"Creating a custom condition",id:"creating-a-custom-condition",children:[]},{value:"Using a custom condition",id:"using-a-custom-condition",children:[]}]},{value:"Simple Sub-Component Matching",id:"simple-sub-component-matching",children:[{value:"Using with legacy APIs",id:"using-with-legacy-apis",children:[]}]},{value:"Resources",id:"resources",children:[]}],l={rightToc:r};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Checkout the ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"unit-testing"}),"getting started")," section to setup the test environment correctly."))),Object(i.b)("p",null,"This document outlines APIs for testing assertions about the component hierarchy.\nLitho's testing APIs are similar to the APIs of\n",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"https://joel-costigliola.github.io/assertj/"}),"AssertJ")," and\n",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"http://hamcrest.org/JavaHamcrest/"}),"Hamcrest"),". If you have used the two before,\nthis should feel very familiar. This guide will describe the APIs and its usage."),Object(i.b)("h2",{id:"basic-sub-component-matching"},"Basic Sub-Component Matching"),Object(i.b)("p",null,"To demonstrate the usage of these APIs consider the following component that truncates the text\npassed and appends ellipsis."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'@LayoutSpec\nclass TruncatingComponentSpec {\n  @OnCreateLayout\n  static Component onCreateLayout(ComponentContext c, @Prop String text) {\n    // A unicode-aware implementation is left as an exercise to the reader.\n    final String s = text.length() > 16 ? text.substring(0, 16) + "..." : text;\n    return Text.create(c).text(s).build();\n  }\n}\n')),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"As a quick side note; for trivial components like these it is often more appropriate\nto exploit the fact that these are pure functions that can be statically invoked.\nWhenever possible, test your business logic in isolation."))),Object(i.b)("h3",{id:"setup"},"Setup"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Add ",Object(i.b)("inlineCode",{parentName:"li"},"@RunWith(LithoTestRunner.class)")," to the top of the test class."),Object(i.b)("li",{parentName:"ul"},"Add a JUnit ",Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"https://github.com/junit-team/junit4/wiki/Rules"}),Object(i.b)("inlineCode",{parentName:"a"},"@Rule"))," ",Object(i.b)("inlineCode",{parentName:"li"},"LithoViewRule"),"."),Object(i.b)("li",{parentName:"ul"},"Add a check to ensure that tests are run in debug mode.\n",Object(i.b)("inlineCode",{parentName:"li"},"ComponentsConfiguration.IS_INTERNAL_BUILD")," must be true.")),Object(i.b)("p",null,"The test class should look like the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'/**\n * Tests {@link LikersComponent}\n */\n@RunWith(RobolectricTestRunner.class)\npublic class TruncatingComponentTest {\n\n  public final @Rule LithoViewRule mLithoViewRule = new LithoViewRule();\n\n  @Before\n  public void assumeInDebugMode() {\n    assumeThat(\n      "These tests can only be run in debug mode.",\n      ComponentsConfiguration.IS_INTERNAL_BUILD, is(true)\n    );\n  }\n\n}\n')),Object(i.b)("h3",{id:"testing-assertion-on-the-component-hierarchy"},"Testing assertion on the component hierarchy"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void whenTextLengthIsLessThan16_shouldContainTextComponentWithFullText() {\n  final ComponentContext c = mLithoViewRule.getContext();\n  final TruncatingComponent component = TruncatingComponent.create(c)\n      .text("Mr. Meeseeks").build();\n\n  LithoAssertions.assertThat(c, component)\n    .has(subComponentWith(c, textEquals("Mr. Meeseeks")));\n}\n')),Object(i.b)("h4",{id:"understanding-the-api-usage"},"Understanding the API usage"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"LithoAssertions.assertThat(ComponentContext, Component)")," will create and mount the layout."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"has(ComponentContext, Condition)")," tests if the component hierarchy passes the assertion of the\nCondition. This is a standard AssertJ API; checkout all the\n",Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"http://joel-costigliola.github.io/assertj/assertj-core-conditions.html"}),"default APIs here"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"subComponentWith(ComponentContext, Condition)")," is a utility method from Litho's testing APIs\nto compose Conditions together."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"textEquals(String)")," is another utility method which creates a Condition that passes only for a\nComponent of type ",Object(i.b)("inlineCode",{parentName:"li"},"Text")," which has its text property set to the String argument."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'subComponentWith(c, textEquals("Mr. Meeseeks")')," create a Condition which is exactly what it reads\nlike; 'passes for a component of type Text with its text property set to \"Mr. Meeseeks\"'.")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"The following is a more complex composition of similar assertions")),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'LithoAssertions.assertThat(c, component)\n    .has(allOf(\n        subComponentWith(c, textEquals("Mr. Meeseeks")),\n        subComponentWith(c, text(startsWith("Mr."))),\n        subComponentWith(c, anyOf(\n            text(endsWith("Sanchez")),\n            text(containsString("Mees")))\n        )\n    ));\n')),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The above assertions are just for illustrative purposes. This is not a good test!"))),Object(i.b)("h2",{id:"matching-against-complex-hierarchies"},"Matching against complex hierarchies"),Object(i.b)("p",null,"Consider a more complex LayoutSpec; it still has the same text truncation logic,\nbut with some new UI elements; wrapping the Text in a Column and a Card."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'@LayoutSpec\npublic class TruncatingComponentSpec {\n  @OnCreateLayout\n  public static Component onCreateLayout(ComponentContext c, @Prop String text) {\n    final String s = text.length() > 16 ? text.substring(0, 16) + "..." : text;\n    return Column.create(c)\n        .backgroundColor(Color.GRAY)\n        .child(Card.create(c).content(Text.create(c).text(s)))\n        .build();\n  }\n}\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"The original test will start failing now.")),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void whenTextLengthIsLessThan16_shouldContainTextComponentWithFullText() {\n  final ComponentContext c = mLithoViewRule.getContext();\n  final TruncatingComponent component = TruncatingComponent.create(c).text("Mr. Meeseeks").build();\n\n  LithoAssertions.assertThat(c, component)\n    .has(subComponentWith(c, textEquals("Mr. Meeseeks")));\n}\n')),Object(i.b)("p",null,"The error messages should provide sufficient information to understand why the test failed. The\nerror message prints out the component hierarchy, and the assertion that failed."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-log"}),'Expecting:\n <TruncatingComponent{0, 0 - 100, 100}\n  Card{0, 0 - 100, 6}\n    Column{3, 2 - 97, 2}\n      Text{0, 0 - 94, 0 text="Szechuan Sauce"}\n      CardClip{0, 0 - 94, 0}\n    CardShadow{0, 0 - 100, 6}>\nto have:\n <sub component with <text <is "Szechuan Sauce">>>\n')),Object(i.b)("p",null,"Here the ",Object(i.b)("inlineCode",{parentName:"p"},"Text")," component was expected to be a direct descendant of ",Object(i.b)("inlineCode",{parentName:"p"},"TruncatingComponent"),", but the\nerror message shows that the Text component is several levels below the TruncatingComponent."),Object(i.b)("p",null,"This test can be fixed by using a different Condition API called ",Object(i.b)("inlineCode",{parentName:"p"},"deepSubComponentWith"),". As the name\nsuggests this condition will test against all the components in the hierarchy, and not just the immediate\ndescendant."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void whenTextLengthIsLessThan16_shouldContainTextComponentWithFullText() {\n  final ComponentContext c = mLithoViewRule.getContext();\n  final TruncatingComponent component = TruncatingComponent.create(c).text("Mr. Meeseeks").build();\n\n  LithoAssertions.assertThat(c, component)\n    .has(\n      deepSubComponentWith(c, textEquals("Mr. Meeseeks"))\n    );\n}\n')),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(o.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(o.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(o.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(o.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Find all the Component conditions in the ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/testing/assertj/ComponentConditions.html"}),"JavaDoc here")))),Object(i.b)("h2",{id:"custom-conditions"},"Custom Conditions"),Object(i.b)("p",null,"Custom Conditions can be created by implementing the ",Object(i.b)("inlineCode",{parentName:"p"},"Condition<InspectableComponent>")," interface\nwhich consists of a single method: ",Object(i.b)("inlineCode",{parentName:"p"},"matches(InspectableComponent)"),".\n",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/testing/subcomponents/InspectableComponent.html"}),"InspectableComponent"),"\nis a wrapper around a ",Object(i.b)("inlineCode",{parentName:"p"},"Component")," with additional information about the component."),Object(i.b)("h3",{id:"creating-a-custom-condition"},"Creating a custom condition"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'public static Condition<InspectableComponent> hasBackground() {\n  return new Condition<InspectableComponent>() {\n    @Override\n    public boolean matches(InspectableComponent value) {\n      as("any background"); // error message.\n      return value.getBackground() != null; // value contains the component being tested.\n    }\n  };\n}\n\n')),Object(i.b)("h3",{id:"using-a-custom-condition"},"Using a custom condition"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void whenTruncatingComponentIsRendered_shouldHaveBackground() {\n  final ComponentContext c = mLithoViewRule.getContext();\n  final TruncatingComponent component = TruncatingComponent.create(c).text("Mr. Meeseeks").build();\n\n  LithoAssertions.assertThat(c, component)\n      .has(deepSubComponentWith(c, hasBackground()));\n}\n')),Object(i.b)("h2",{id:"simple-sub-component-matching"},"Simple Sub-Component Matching"),Object(i.b)("p",null,"To test for the mere presence of a component of a certain type use the\n",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/testing/subcomponents/SubComponent.html"}),"SubComponent.of")," API."),Object(i.b)("p",null,"Consider a hypothetical LayoutSpec called ",Object(i.b)("inlineCode",{parentName:"p"},"StoryComponentSpec"),", which composes a\n",Object(i.b)("inlineCode",{parentName:"p"},"HeaderComponentSpec"),", a ",Object(i.b)("inlineCode",{parentName:"p"},"MessageComponentSpec"),", a ",Object(i.b)("inlineCode",{parentName:"p"},"LikersComponentSpec"),", and a\n",Object(i.b)("inlineCode",{parentName:"p"},"FeedbackComponentSpec"),". The following test can be used to assert the presence of\nthese components in the hierarchy."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),"public class StoryComponentTest {\n  ...\n\n  @Test\n  public void whenStoryComponentIsRendered_shouldContainAllSubcomponents() {\n    final ComponentContext c = mLithoViewRule.getContext();\n    final StoryComponent.Builder builder = StoryComponent.create(c).build();\n\n    assertThat(builder).hasSubComponents(\n        SubComponent.of(HeaderComponent.class),\n        SubComponent.of(MessageComponent.class),\n        SubComponent.of(LikersComponent.class),\n        SubComponent.of(FeedbackComponent.class));\n\n    assertThat(builder)\n        .doesNotContainSubComponent(SubComponent.of(TruncatingComponent.class));\n  }\n}\n")),Object(i.b)("h3",{id:"using-with-legacy-apis"},"Using with legacy APIs"),Object(i.b)("p",null,"Litho provides a bridge interface ",Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/testing/subcomponents/SubComponent.html#legacySubComponent-com.facebook.litho.testing.subcomponents.SubComponent-"}),"legacySubComponent"),"\nwhich enables using the ",Object(i.b)("inlineCode",{parentName:"p"},"SubComponent.of")," API with the ",Object(i.b)("inlineCode",{parentName:"p"},"subComponentWith")," APIs. It accepts a\n",Object(i.b)("inlineCode",{parentName:"p"},"SubComponent")," and works with both shallow and deep sub-component traversals. This is great\nif you want to ensure that a component with a given set of props exists in the component tree."),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-java"}),'@Test\npublic void testSubComponentLegacyBridge() {\n  final ComponentContext c = mComponentsRule.getContext();\n\n  assertThat(c, mComponent)\n      .has(\n          subComponentWith(\n              c,\n              legacySubComponent(\n                  SubComponent.of(\n                      FooterComponent.create(c).subtitle("Gubba nub nub doo rah kah").build()))));\n}\n')),Object(i.b)("h2",{id:"resources"},"Resources"),Object(i.b)("p",null,"To learn more, check out these resources:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"pathname:///javadoc/com/facebook/litho/testing/assertj/LithoViewSubComponentExtractor.html"}),"LithoViewSubComponentExtractor")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"pathname:///javadoc/com/facebook/litho/testing/assertj/LithoViewSubComponentDeepExtractor.html"}),"LithoViewSubComponentDeepExtractor")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"pathname:///javadoc/com/facebook/litho/testing/assertj/ComponentConditions.html"}),"ComponentConditions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(o.a)({parentName:"li"},{href:"http://joel-costigliola.github.io/assertj/assertj-core-conditions.html"}),"AssertJ Conditions"))))}p.isMDXComponent=!0},161:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var o=n(0),a=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=r(e,["components","mdxType","originalType","parentName"]),b=p(n),m=o,h=b["".concat(s,".").concat(m)]||b[m]||u[m]||i;return n?a.a.createElement(h,c(c({ref:t},l),{},{components:n})):a.a.createElement(h,c({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=m;var c={};for(var r in t)hasOwnProperty.call(t,r)&&(c[r]=t[r]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var l=2;l<i;l++)s[l]=n[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},166:function(e,t,n){"use strict";var o=n(0),a=n(167);t.a=function(){var e=Object(o.useContext)(a.a);if(null==e)throw new Error("`useThemeContext` is used outside of `Layout` Component. See https://v2.docusaurus.io/docs/theme-classic#usethemecontext.");return e}},167:function(e,t,n){"use strict";var o=n(0),a=n.n(o).a.createContext(void 0);t.a=a},168:function(e,t,n){"use strict";n.d(t,"b",(function(){return s}));var o=n(19),a={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","at-rule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]},i=n(0),s={Prism:o.a,theme:a};function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var l=/\r\n|\r|\n/,p=function(e){0===e.length?e.push({types:["plain"],content:"",empty:!0}):1===e.length&&""===e[0].content&&(e[0].empty=!0)},b=function(e,t){var n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)},u=function(e,t){var n=e.plain,o=Object.create(null),a=e.styles.reduce((function(e,n){var o=n.languages,a=n.style;return o&&!o.includes(t)||n.types.forEach((function(t){var n=r({},e[t],a);e[t]=n})),e}),o);return a.root=n,a.plain=r({},n,{backgroundColor:null}),a};function m(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&-1===t.indexOf(o)&&(n[o]=e[o]);return n}var h=function(e){function t(){for(var t=this,n=[],o=arguments.length;o--;)n[o]=arguments[o];e.apply(this,n),c(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var n=e.theme?u(e.theme,e.language):void 0;return t.themeDict=n})),c(this,"getLineProps",(function(e){var n=e.key,o=e.className,a=e.style,i=r({},m(e,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),s=t.getThemeDict(t.props);return void 0!==s&&(i.style=s.plain),void 0!==a&&(i.style=void 0!==i.style?r({},i.style,a):a),void 0!==n&&(i.key=n),o&&(i.className+=" "+o),i})),c(this,"getStyleForToken",(function(e){var n=e.types,o=e.empty,a=n.length,i=t.getThemeDict(t.props);if(void 0!==i){if(1===a&&"plain"===n[0])return o?{display:"inline-block"}:void 0;if(1===a&&!o)return i[n[0]];var s=o?{display:"inline-block"}:{},c=n.map((function(e){return i[e]}));return Object.assign.apply(Object,[s].concat(c))}})),c(this,"getTokenProps",(function(e){var n=e.key,o=e.className,a=e.style,i=e.token,s=r({},m(e,["key","className","style","token"]),{className:"token "+i.types.join(" "),children:i.content,style:t.getStyleForToken(i),key:void 0});return void 0!==a&&(s.style=void 0!==s.style?r({},s.style,a):a),void 0!==n&&(s.key=n),o&&(s.className+=" "+o),s}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,n=e.language,o=e.code,a=e.children,i=this.getThemeDict(this.props),s=t.languages[n];return a({tokens:function(e){for(var t=[[]],n=[e],o=[0],a=[e.length],i=0,s=0,c=[],r=[c];s>-1;){for(;(i=o[s]++)<a[s];){var u=void 0,m=t[s],h=n[s][i];if("string"==typeof h?(m=s>0?m:["plain"],u=h):(m=b(m,h.type),h.alias&&(m=b(m,h.alias)),u=h.content),"string"==typeof u){var d=u.split(l),g=d.length;c.push({types:m,content:d[0]});for(var j=1;j<g;j++)p(c),r.push(c=[]),c.push({types:m,content:d[j]})}else s++,t.push(m),n.push(u),o.push(0),a.push(u.length)}s--,t.pop(),n.pop(),o.pop(),a.pop()}return p(c),r}(void 0!==s?t.tokenize(o,s,n):[o]),className:"prism-code language-"+n,style:void 0!==i?i.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(i.Component);t.a=h},169:function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var o=n(2),a=n(0),i=n.n(a),s=n(168),c={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]},r={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]},l="0.40.0",p="0.40.1-SNAPSHOT",b="0.9.0",u="0.46.0",m=n(166),h=function(e){var t=e.language,n=e.code.replace(/{{site.lithoVersion}}/g,l).replace(/{{site.soloaderVersion}}/g,b).replace(/{{site.lithoSnapshotVersion}}/g,p).replace(/{{site.flipperVersion}}/g,u),a=Object(m.a)().isDarkTheme?r:c;return i.a.createElement(s.a,Object(o.a)({},s.b,{code:n,language:t,theme:a}),(function(e){var t=e.className,n=e.style,o=e.tokens,a=e.getLineProps,s=e.getTokenProps;return i.a.createElement("pre",{className:t,style:n},o.map((function(e,t){return i.a.createElement("div",a({line:e,key:t}),e.map((function(e,t){return i.a.createElement("span",s({token:e,key:t}))})))})))}))}}}]);