(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{161:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,d=u["".concat(i,".").concat(m)]||u[m]||b[m]||r;return n?o.a.createElement(d,c(c({ref:t},s),{},{components:n})):o.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<r;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},162:function(e,t,n){"use strict";var a=n(0),o=n(20);t.a=function(){var e=Object(a.useContext)(o.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},163:function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return i}));var a=n(162),o=n(164);function r(){var e=Object(a.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,a){var r=void 0===a?{}:a,i=r.forcePrependBaseUrl,c=void 0!==i&&i,l=r.absolute,s=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if(Object(o.b)(n))return n;if(c)return t+n;var p=!n.startsWith(t)?t+n.replace(/^\//,""):n;return s?e+p:p}(r,n,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},164:function(e,t,n){"use strict";function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function o(e){return void 0!==e&&!a(e)}n.d(t,"b",(function(){return a})),n.d(t,"a",(function(){return o}))},165:function(e,t,n){"use strict";function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}t.a=function(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}},170:function(e,t,n){"use strict";var a=n(0),o=Object(a.createContext)(void 0);t.a=o},171:function(e,t,n){"use strict";var a=n(0),o=n(170);t.a=function(){var e=Object(a.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},175:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(171),i=n(165),c=n(47),l=n.n(c),s=37,p=39;t.a=function(e){var t=e.block,n=e.children,c=e.defaultValue,u=e.values,b=e.groupId,m=Object(r.a)(),d=m.tabGroupChoices,h=m.setTabGroupChoices,f=Object(a.useState)(c),O=f[0],j=f[1],y=Object(a.useState)(!1),v=y[0],g=y[1];if(null!=b){var w=d[b];null!=w&&w!==O&&u.some((function(e){return e.value===w}))&&j(w)}var C=function(e){j(e),null!=b&&h(b,e)},N=[],x=function(e){e.metaKey||e.altKey||e.ctrlKey||g(!0)},k=function(){g(!1)};return Object(a.useEffect)((function(){window.addEventListener("keydown",x),window.addEventListener("mousedown",k)}),[]),o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t})},u.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":O===t}),style:v?{}:{outline:"none"},key:t,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(N,e.target,e),x(e)},onFocus:function(){return C(t)},onClick:function(){C(t),g(!1)},onPointerDown:function(){return g(!1)}},n)}))),o.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter((function(e){return e.props.value===O}))[0]))}},176:function(e,t,n){"use strict";var a=n(0),o=n.n(a);t.a=function(e){return o.a.createElement("div",null,e.children)}},82:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return m}));var a=n(2),o=n(6),r=(n(0),n(161)),i=n(175),c=n(176),l=n(163),s={id:"layout-specs",title:"Layout Specs"},p={unversionedId:"mainconcepts/uicomposition/layout-specs",id:"mainconcepts/uicomposition/layout-specs",isDocsHomePage:!1,title:"Layout Specs",description:"Moved from old website without any change.",source:"@site/docs/mainconcepts/uicomposition/layout-specs.mdx",slug:"/mainconcepts/uicomposition/layout-specs",permalink:"/docs/mainconcepts/uicomposition/layout-specs",editUrl:"https://github.com/facebook/litho/edit/master/website/docs/mainconcepts/uicomposition/layout-specs.mdx",version:"current",sidebar:"mainSidebar",previous:{title:"Building Lists",permalink:"/docs/tutorial/building-lists"},next:{title:"Mount Specs",permalink:"/docs/mainconcepts/uicomposition/mount-specs"}},u=[],b={rightToc:u};function m(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("div",{className:"admonition admonition-danger alert alert--danger"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"Content needs to be updated")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Moved from old website without any change."))),Object(r.b)(i.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},Object(r.b)(c.a,{value:"java",mdxType:"TabItem"},Object(r.b)("p",null,"A ",Object(r.b)("em",{parentName:"p"},"layout spec")," is the logical equivalent of a composite view on Android. It simply groups existing components together in an immutable layout tree."),Object(r.b)("p",null,"Implementing a layout spec is very simple: you only need to write one method annotated with ",Object(r.b)("inlineCode",{parentName:"p"},"@OnCreateLayout")," which returns an immutable tree of ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/Component.html"}),"Component")," objects."),Object(r.b)("p",null,"Let's start with a simple example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"@LayoutSpec\npublic class MyComponentSpec {\n\n  @OnCreateLayout\n  static Component onCreateLayout(\n      ComponentContext c,\n      @Prop int color,\n      @Prop String title) {\n      return Row.create(c)\n          .alignItems(CENTER)\n          .child(\n              SolidColor.create(c)\n                  .colorRes(color)\n                  .widthDip(40)\n                  .heightDip(40))\n          .child(\n              Text.create(c)\n                  .text(title)\n                  .textSizeRes(R.dimen.my_text_size)\n                  .flexGrow(1f))\n          .build();\n  }\n}\n")),Object(r.b)("p",null,"As you can see, layout spec classes use the ",Object(r.b)("inlineCode",{parentName:"p"},"@LayoutSpec")," annotation."),Object(r.b)("p",null,"The method annotated with ",Object(r.b)("inlineCode",{parentName:"p"},"@OnCreateLayout")," must have ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/ComponentContext.html"}),"ComponentContext")," as its first argument followed by a list of arguments annotated with ",Object(r.b)("inlineCode",{parentName:"p"},"@Prop"),". The annotation processor will validate this and other invariants in the API at build time."),Object(r.b)("p",null,"In the example above, the layout tree has a root ",Object(r.b)("em",{parentName:"p"},"Container")," with two children stacked horizontally (",Object(r.b)("inlineCode",{parentName:"p"},"Row.create"),") and vertically centered (",Object(r.b)("inlineCode",{parentName:"p"},"Align.CENTER"),")."),Object(r.b)("p",null,"The first child is a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/widget/SolidColor.html"}),"SolidColor")," component that takes a ",Object(r.b)("inlineCode",{parentName:"p"},"colorRes")," prop and has a 40dp width and height."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"SolidColor.create(c)\n    .colorRes(color)\n    .width(40)\n    .height(40)\n")),Object(r.b)("p",null,"The second child is a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/widget/Text.html"}),"Text")," component that takes a prop named ",Object(r.b)("inlineCode",{parentName:"p"},"text")," and fills the remaining horizontal space available in ",Object(r.b)("inlineCode",{parentName:"p"},"MyComponent")," by using ",Object(r.b)("inlineCode",{parentName:"p"},"grow(1f)")," (equivalent to Android's ",Object(r.b)("inlineCode",{parentName:"p"},"layoutWeight")," from ",Object(r.b)("inlineCode",{parentName:"p"},"LinearLayout"),"). The text size is defined in ",Object(r.b)("inlineCode",{parentName:"p"},"my_text_size")," dimension resource."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"Text.create(c)\n    .text(title)\n    .textSizeRes(R.dimen.my_text_size)\n    .grow(1f)\n")),Object(r.b)("img",{src:Object(l.a)("/images/flow-chart-v0.23.1-layout-spec.svg"),alt:"Layout Spec lifecycle flowchart",className:"white-background"}),Object(r.b)("p",null,"You can check the full ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://yogalayout.com/docs/"}),"Yoga")," documentation to see all the layout features that the framework exposes.")),Object(r.b)(c.a,{value:"kotlin",mdxType:"TabItem"},Object(r.b)("p",null,"A ",Object(r.b)("em",{parentName:"p"},"layout spec")," is the logical equivalent of a composite view on Android. It simply groups existing components together in an immutable layout tree."),Object(r.b)("p",null,"Implementing a layout spec is very simple: you only need to write one method annotated with ",Object(r.b)("inlineCode",{parentName:"p"},"@OnCreateLayout")," which returns an immutable tree of ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/Component.html"}),"Component")," objects."),Object(r.b)("p",null,"Let's start with a simple example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-kotlin"}),"@LayoutSpec\nobject MyComponentSpec {\n\n  @OnCreateLayout\n  fun onCreateLayout(\n      c: ComponentContext,\n      @Prop image: String,\n      @Prop(optional = true) imageAspectRatio: Float): Component =\n      Row.create(c)\n          .alignItems(CENTER)\n          .child(\n              SolidColor.create(c)\n                  .colorRes(color)\n                  .widthDip(40)\n                  .heightDip(40))\n          .child(\n              Text.create(c)\n                  .text(title)\n                  .textSizeRes(R.dimen.my_text_size)\n                  .flexGrow(1f))\n          .build()\n}\n")),Object(r.b)("p",null,"As you can see, layout spec classes use the ",Object(r.b)("inlineCode",{parentName:"p"},"@LayoutSpec")," annotation."),Object(r.b)("p",null,"The method annotated with ",Object(r.b)("inlineCode",{parentName:"p"},"@OnCreateLayout")," must have ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/ComponentContext.html"}),"ComponentContext")," as its first argument followed by a list of arguments annotated with ",Object(r.b)("inlineCode",{parentName:"p"},"@Prop"),". The annotation processor will validate this and other invariants in the API at build time."),Object(r.b)("p",null,"In the example above, the layout tree has a root ",Object(r.b)("em",{parentName:"p"},"Container")," with two children stacked horizontally (",Object(r.b)("inlineCode",{parentName:"p"},"Row.create"),") and vertically centered (",Object(r.b)("inlineCode",{parentName:"p"},"Align.CENTER"),")."),Object(r.b)("p",null,"The first child is a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/widget/SolidColor.html"}),"SolidColor")," component that takes a ",Object(r.b)("inlineCode",{parentName:"p"},"colorRes")," prop and has a 40dp width and height."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-kotlin"}),"SolidColor.create(c)\n    .colorRes(color)\n    .width(40)\n    .height(40)\n")),Object(r.b)("p",null,"The second child is a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"pathname:///javadoc/com/facebook/litho/widget/Text.html"}),"Text")," component that takes a prop named ",Object(r.b)("inlineCode",{parentName:"p"},"text")," and fills the remaining horizontal space available in ",Object(r.b)("inlineCode",{parentName:"p"},"MyComponent")," by using ",Object(r.b)("inlineCode",{parentName:"p"},"grow(1f)")," (equivalent to Android's ",Object(r.b)("inlineCode",{parentName:"p"},"layoutWeight")," from ",Object(r.b)("inlineCode",{parentName:"p"},"LinearLayout"),"). The text size is defined in ",Object(r.b)("inlineCode",{parentName:"p"},"my_text_size")," dimension resource."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-kotlin"}),"Text.create(c)\n    .text(title)\n    .textSizeRes(R.dimen.my_text_size)\n    .grow(1f)\n")),Object(r.b)("img",{src:Object(l.a)("/images/flow-chart-v0.23.1-layout-spec.svg"),alt:"Layout Spec lifecycle flowchart",className:"white-background"}),Object(r.b)("p",null,"You can check the full ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://yogalayout.com/docs/"}),"Yoga")," documentation to see all the layout features that the framework exposes."))))}m.isMDXComponent=!0}}]);